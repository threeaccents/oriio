apiVersion: v1
kind: ServiceAccount
metadata:
  name: serviceaccount-name
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: role-name
rules:
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - list
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: rolebinding-name
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: role-name
subjects:
  - kind: ServiceAccount
    name: serviceaccount-name
---    
apiVersion: v1
kind: Service
metadata:
  name: oriio
  labels:
    app: oriio
    tier: backend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
  selector:
    app: oriio
---    
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oriio
  labels:
    app: oriio
spec:
  replicas: 2
  selector:
    matchLabels:
      app: oriio
      tier: web
  template:
    metadata:
      labels:
        app: oriio
        tier: web
    spec:
      serviceAccountName: serviceaccount-name
      containers:
        - name: oriio
          image: <IMAGE>
          volumeMounts:
          - mountPath: /data
            name: data
          ports:
          - containerPort: 8080
          env:
            - name: SECRET_KEY_BASE
              value: FGwH/tyjHh4SSv/hcqRnvcPF3ffqxMPaiwB52hdW/A6TDxY82nKa1MWrtuC7wpmq
            - name: MAHI_FILE_STORAGE_ENGINE
              value: s3-compatible
            - name: MAHI_FILE_STORAGE_ACCESS_KEY
              value: AKIA53ZJZHZMFRYWSOTO
            - name: MAHI_FILE_STORAGE_SECRET_KEY
              value: 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
            - name: MAHI_FILE_STORAGE_REGION
              value: us-east-2 
            - name: FLY_APP_NAME
              value: oriio    
            - name: MAHI_FILE_STORAGE_BUCKET
              value: oriio-my-4-app-2672
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: nfs-data
      imagePullSecrets:
      - name: oriio-repo
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oriio-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - oriio.oriio.io
    secretName: hello-kubernetes-tls
  rules:
  - host: "oriio.oriio.io"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: oriio
            port:
              number: 80
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    # Email address used for ACME registration
    email: rodrigo@threeaccents.com
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      # Name of a secret used to store the ACME account private key
      name: letsencrypt-prod-private-key
    # Add a single challenge solver, HTTP01 using nginx
    solvers:
    - http01:
        ingress:
          class: nginx   
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-data
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  storageClassName: nfs           